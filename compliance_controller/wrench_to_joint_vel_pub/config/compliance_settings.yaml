spin_rate:  125 # Hertz
jacobian_frame_name: world  # MoveIt! planning frame. Often the last link in your tf tree

force_torque_frame_name: rh_forearm # The frame of incoming force/torque data (WARNING this has to be
                                    # the same as in the incoming FT sensor msg as currently there is no conversion)
force_torque_topic: /ra_wrench # The topic of incoming force/torque data

spoof_sensor: ra_ft_sensor

move_group_name: right_arm # The MoveGroup name of your robot
max_allowable_cmd_magnitude: 4.5 # The largest joint speed correction that can be published [rad/s]
outgoing_joint_vel_topic: /compliance_controller/compliance_velocity_adjustment # Joint delta-velocities
joint_limit_margin: 0.1 # added as a buffer to joint limits [radians]. If moving quickly, make this larger.
condition_number_limit: 50 # The Jacobian condition number above which to pause compliance
compliance_library:
  # Key equation: compliance_velocity[i] = wrench[i]/stiffness[i]
  # Be careful. As in the case of the damping, stiffnesses <= 1e-3 are considered infinite!
  stiffness: [2000, 2000, 2000, 200, 200, 200] # First three element are Newtons/(m/s), last 3 are N*m/(rad/s). Should be positive.
  # Be careful, damping is set weirdly. The inverse of the parameter is used.
  # Smaller damping parameters lead to more damping. Except if you set the parameter to 
  # be <= 1e-3 in which case it gets set to a high number, efectively nullifying the damping term
  #damping: [00, 00, 00, 0000, 0000, 0000] # First three element are Newtons/m, last 3 are N*m/rad. Should be positive.
  damping: [10000, 10000, 10000, 10000, 10000, 10000]
  low_pass_filter_param: 10 # Larger > more smoothing on compliance calcs, but more lag
  deadband: [1, 1, 1, 1, 1, 1] # No reaction until force exceeds X [N, N, N, Nm, Nm, Nm]
  end_condition_wrench: [80, 80, 80, 60, 60, 60] # Safety feature. Halt if force exceeds [N, N, N, Nm, Nm, Nm]
  highest_allowable_force: 88 # Safety feature. Halt if force magnitude exceeds this across all dimensions [N]
  highest_allowable_torque: 50 # Safety feature. Halt if torque magnitude exceeds this across all dimensions [Nm]
  # Defines which directions (true's) the compliance starts in
  # Order is [translation-x, translation-y, translation-z, rotation-x, rotation-y, rotation-z]
  default_compliant_dimensions: [1, 1, 1, 1, 1, 1]
  compensate_for_ee_weight: true # Determines whether or not to remove the wrench caused be EE weight before doing calcs. Enable this for real robot
  # simulated hand is currently around 37 N
  ee_weight: 37 #45 # Newtons, the weight of the EE
  ee_com: [0, 0, 0.12] # Meters, the location of the center of mass, in the Force/torque frame
  gravity_frame_name: world # The frame name who's z-axis points world-up (away from gravity)
